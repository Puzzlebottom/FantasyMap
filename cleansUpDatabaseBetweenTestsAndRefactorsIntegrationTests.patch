diff --git a/src/test/java/com/conor/FantasyMap/FantasyMapApplicationTests.java b/src/test/java/com/conor/FantasyMap/FantasyMapApplicationTests.java
deleted file mode 100644
index c4a4ebc..0000000
--- a/src/test/java/com/conor/FantasyMap/FantasyMapApplicationTests.java
+++ /dev/null
@@ -1,10 +0,0 @@
-package com.conor.FantasyMap;
-
-import org.junit.Ignore;
-import org.junit.jupiter.api.Test;
-import org.springframework.boot.test.context.SpringBootTest;
-
-@SpringBootTest
-class FantasyMapApplicationTests {
-
-}
diff --git a/src/test/java/com/conor/FantasyMap/controllers/IntegrationTest.java b/src/test/java/com/conor/FantasyMap/controllers/IntegrationTest.java
new file mode 100644
index 0000000..9b30fa9
--- /dev/null
+++ b/src/test/java/com/conor/FantasyMap/controllers/IntegrationTest.java
@@ -0,0 +1,42 @@
+package com.conor.FantasyMap.controllers;
+
+
+import com.conor.FantasyMap.repositories.LocationRepository;
+import com.conor.FantasyMap.repositories.LogEntryRepository;
+import org.junit.jupiter.api.AfterEach;
+import org.junit.jupiter.api.BeforeEach;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.test.context.SpringBootTest;
+import org.springframework.boot.test.web.client.TestRestTemplate;
+import org.springframework.boot.web.server.LocalServerPort;
+
+import javax.transaction.Transactional;
+
+@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+public abstract class IntegrationTest {
+    @Autowired
+    private LogEntryRepository logEntryRepository;
+
+    @Autowired
+    private LocationRepository locationRepository;
+
+    @LocalServerPort
+    protected int port;
+
+    @Autowired
+    protected TestRestTemplate restTemplate;
+
+    protected IntegrationTestHelper testHelper;
+
+    @BeforeEach
+    public void setupHelper() {
+        testHelper = new IntegrationTestHelper(restTemplate, port);
+    }
+
+    @AfterEach
+    @Transactional
+    public void cleanupDatabase() {
+        logEntryRepository.deleteAll();
+        locationRepository.deleteAll();
+    }
+}
diff --git a/src/test/java/com/conor/FantasyMap/controllers/IntegrationTestHelper.java b/src/test/java/com/conor/FantasyMap/controllers/IntegrationTestHelper.java
index 35c7fba..92148e2 100644
--- a/src/test/java/com/conor/FantasyMap/controllers/IntegrationTestHelper.java
+++ b/src/test/java/com/conor/FantasyMap/controllers/IntegrationTestHelper.java
@@ -1,34 +1,32 @@
 package com.conor.FantasyMap.controllers;

 import com.conor.FantasyMap.models.Location;
+import lombok.AllArgsConstructor;
 import org.jsoup.Jsoup;
 import org.jsoup.nodes.Document;
-import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.test.web.client.TestRestTemplate;
-import org.springframework.boot.web.server.LocalServerPort;
 import org.springframework.http.HttpEntity;
 import org.springframework.http.HttpHeaders;
 import org.springframework.http.MediaType;
-import org.springframework.stereotype.Component;
 import org.springframework.util.LinkedMultiValueMap;

 import java.io.IOException;
 import java.util.List;
 import java.util.Map;
-import java.util.stream.Collectors;

 import static java.util.stream.Collectors.toList;

-@Component
+@AllArgsConstructor
 public class IntegrationTestHelper {

-    @Autowired
     private TestRestTemplate restTemplate;
+    private int port;

     String getBaseUri(int port) {
         return "http://localhost:" + port;
     }
-    public void givenPartyHasMoved(int port, String direction, int deltaHours) {
+
+    public void givenPartyHasMoved(String direction, int deltaHours) {
         LinkedMultiValueMap<String, String> body = new LinkedMultiValueMap<>();
         body.add("direction", direction);
         body.add("deltaHours", String.valueOf(deltaHours));
@@ -40,7 +38,7 @@ public class IntegrationTestHelper {
         restTemplate.postForObject(getBaseUri(port) + "/log-entries/free", entity, Object.class);
     }

-    public void givenPartyHasMovedToDestination(int port, String destination, int deltaHours) {
+    public void givenPartyHasMovedToDestination(String destination, int deltaHours) {
         LinkedMultiValueMap<String, String> body = new LinkedMultiValueMap<>();
         body.add("destinationName", destination);
         body.add("deltaHours", String.valueOf(deltaHours));
@@ -52,8 +50,7 @@ public class IntegrationTestHelper {
         restTemplate.postForObject(getBaseUri(port) + "/log-entries/destination", entity, Object.class);
     }

-
-    public void givenALocationExists(int port, String name, int xCoord, int yCoord) {
+    public void givenALocationExists(String name, int xCoord, int yCoord) {
         Location location = new Location();
         location.setName(name);
         location.setXCoord(xCoord);
@@ -62,15 +59,15 @@ public class IntegrationTestHelper {
         restTemplate.postForObject(getBaseUri(port) + "/stored-locations", location, Object.class);
     }

-    public void givenALocationExists(int port, String name) {
-        givenALocationExists(port, name, 0, 0);
+    public void givenALocationExists(String name) {
+        givenALocationExists(name, 0, 0);
     }

-    public Document getDoc(int port) throws IOException {
+    public Document getDoc() throws IOException {
         return Jsoup.connect(getBaseUri(port)).get();
     }

-    public List<String> getAllLocationNames(int port) {
+    public List<String> getAllLocationNames() {

         List<Map<String, Object>> result = restTemplate.getForObject(getBaseUri(port) + "/stored-locations", List.class);
         return result.stream()
diff --git a/src/test/java/com/conor/FantasyMap/controllers/LocationControllerIntegrationTest.java b/src/test/java/com/conor/FantasyMap/controllers/LocationControllerIntegrationTest.java
index 668d2e6..773131e 100644
--- a/src/test/java/com/conor/FantasyMap/controllers/LocationControllerIntegrationTest.java
+++ b/src/test/java/com/conor/FantasyMap/controllers/LocationControllerIntegrationTest.java
@@ -1,13 +1,9 @@
 package com.conor.FantasyMap.controllers;

-import com.conor.FantasyMap.models.Location;
-import org.jsoup.Jsoup;
 import org.jsoup.nodes.Document;
 import org.jsoup.select.Elements;
-import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.test.context.SpringBootTest;
 import org.springframework.boot.test.web.client.TestRestTemplate;
 import org.springframework.boot.web.server.LocalServerPort;

@@ -16,26 +12,22 @@ import java.util.List;

 import static org.assertj.core.api.Assertions.assertThat;

-@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
-public class LocationControllerIntegrationTest {
+public class LocationControllerIntegrationTest extends IntegrationTest {
     @LocalServerPort
     private int port;

-    @Autowired
-    private IntegrationTestHelper integrationTestHelper;
-
     @Autowired
     private TestRestTemplate restTemplate;

     @Test
     void shouldUpdateInfoForALocation() {
-        integrationTestHelper.givenALocationExists(port, "Bastion");
+        testHelper.givenALocationExists("Bastion");

-        restTemplate.postForObject(integrationTestHelper.getBaseUri(port) + "/stored-locations/location/info?targetLocation=Bastion",
+        restTemplate.postForObject(testHelper.getBaseUri(port) + "/stored-locations/location/info?targetLocation=Bastion",
                 "banana",
                 String.class);

-        List result = restTemplate.getForObject(integrationTestHelper.getBaseUri(port) + "/stored-locations/location/info?name=Bastion",
+        List result = restTemplate.getForObject(testHelper.getBaseUri(port) + "/stored-locations/location/info?name=Bastion",
                 List.class);

         assertThat(result).contains("banana");
@@ -43,10 +35,10 @@ public class LocationControllerIntegrationTest {

     @Test
     void shouldRenderLocationsOnMap() throws IOException {
-        integrationTestHelper.givenALocationExists(port, "Bastion");
-        integrationTestHelper.givenALocationExists(port, "Cathedral", -12, 20);
+        testHelper.givenALocationExists("Bastion");
+        testHelper.givenALocationExists("Cathedral", -12, 20);

-        Document doc = integrationTestHelper.getDoc(port);
+        Document doc = testHelper.getDoc();
         Elements circles = doc.select("[data-test-id=\"location\"]");

         assertThat(circles.size()).isEqualTo(2);
diff --git a/src/test/java/com/conor/FantasyMap/controllers/LogEntryControllerIntegrationTest.java b/src/test/java/com/conor/FantasyMap/controllers/LogEntryControllerIntegrationTest.java
index aab5025..fb2f7a8 100644
--- a/src/test/java/com/conor/FantasyMap/controllers/LogEntryControllerIntegrationTest.java
+++ b/src/test/java/com/conor/FantasyMap/controllers/LogEntryControllerIntegrationTest.java
@@ -4,12 +4,10 @@ import org.junit.Ignore;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.test.context.SpringBootTest;
 import org.springframework.boot.test.web.client.TestRestTemplate;
 import org.springframework.boot.web.server.LocalServerPort;

-@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
-class LogEntryControllerIntegrationTest {
+class LogEntryControllerIntegrationTest extends IntegrationTest {
     @LocalServerPort
     private int port;

diff --git a/src/test/java/com/conor/FantasyMap/presenters/TravelLogIntegrationTest.java b/src/test/java/com/conor/FantasyMap/presenters/TravelLogIntegrationTest.java
index 3a89147..1a3e8f6 100644
--- a/src/test/java/com/conor/FantasyMap/presenters/TravelLogIntegrationTest.java
+++ b/src/test/java/com/conor/FantasyMap/presenters/TravelLogIntegrationTest.java
@@ -1,37 +1,24 @@
 package com.conor.FantasyMap.presenters;

-import com.conor.FantasyMap.controllers.IntegrationTestHelper;
-import com.conor.FantasyMap.models.Location;
+import com.conor.FantasyMap.controllers.IntegrationTest;
 import org.jsoup.nodes.Document;
 import org.jsoup.select.Elements;
-import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.test.context.SpringBootTest;
-import org.springframework.boot.test.web.client.TestRestTemplate;
-import org.springframework.boot.web.server.LocalServerPort;
-import org.springframework.test.annotation.DirtiesContext;

 import java.io.IOException;
 import java.util.List;

 import static org.assertj.core.api.Assertions.assertThat;

-@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
-public class TravelLogIntegrationTest {
-    @LocalServerPort
-    private int port;
-
-    @Autowired
-    private IntegrationTestHelper integrationTestHelper;
+public class TravelLogIntegrationTest extends IntegrationTest {

     @Test
     void shouldContainListOfMovements() throws IOException {
-        integrationTestHelper.givenALocationExists(port, "Bastion");
-        integrationTestHelper.givenPartyHasMoved(port, "N", 24);
-        integrationTestHelper.givenPartyHasMoved(port, "SE", 24);
+        testHelper.givenALocationExists("Bastion");
+        testHelper.givenPartyHasMoved("N", 24);
+        testHelper.givenPartyHasMoved("SE", 24);

-        Document doc = integrationTestHelper.getDoc(port);
+        Document doc = testHelper.getDoc();
         Elements li = doc.select("li");

         assertThat(li.size()).isEqualTo(2);
@@ -39,13 +26,12 @@ public class TravelLogIntegrationTest {
     }

     @Test
-    @DirtiesContext
     void shouldShowMoveDestination() throws IOException {
-        integrationTestHelper.givenALocationExists(port, "Bastion", 1, 1);
-        List<String> allLocationNames = integrationTestHelper.getAllLocationNames(port);
-        integrationTestHelper.givenPartyHasMovedToDestination(port, allLocationNames.get(0), 24);
+        testHelper.givenALocationExists("Bastion", 1, 1);
+        List<String> allLocationNames = testHelper.getAllLocationNames();
+        testHelper.givenPartyHasMovedToDestination(allLocationNames.get(0), 24);

-        Document doc = integrationTestHelper.getDoc(port);
+        Document doc = testHelper.getDoc();
         Elements li = doc.select("li");

         assertThat(li.size()).isEqualTo(1);
