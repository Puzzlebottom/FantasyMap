# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    services:
      app-postgres:
        image: "postgres:13"
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: "app_dev"
          POSTGRES_PASSWORD: "e1bc9e7f864d"
        volumes:
          - ${{ github.workspace }}/initializePostgres.local.sql:/docker-entrypoint-initdb.d/initializePostres.sql
        options: >-
          --health-cmd pg_isready
          --health-interval 25s
          --health-timeout 25s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '16'
        distribution: 'temurin'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
      env:
        SPRING_PROFILES_ACTIVE: "ci"
      with:
        arguments: build